{"version":3,"sources":["app.module.scss","components/dashboard/dashboard.module.scss","components/kbApply/kbApply.module.scss","modules/common.ts","components/common/SlideSnackbar.tsx","components/common/SlideSnackbarCont.tsx","components/globalHeader/HoverMenu.tsx","components/globalHeader/AccountMenu.tsx","components/globalHeader/GlobalHeader.tsx","components/globalHeader/GlobalHeaderCont.tsx","components/common/CircularDeterminate.tsx","components/dashboard/Dashboard.tsx","components/common/AlertDialog.tsx","components/common/ConfirmDialog.tsx","components/kbAdd/KbAdd.tsx","components/kbApply/Publish.tsx","components/kbApply/Train.tsx","components/kbApply/Test.tsx","components/kbApply/KbApply.tsx","components/kbApply/KbApplyCont.tsx","components/kbEdit/Table.tsx","components/kbEdit/KbEdit.tsx","components/masterCategory/MasterCategory.tsx","components/masterOthers/MasterOthers.tsx","modules/setting.ts","components/common/TableSettings.tsx","components/settings/Table.tsx","components/settings/Settings.tsx","components/settings/SettingsCont.tsx","components/Routes.tsx","App.tsx","serviceWorker.ts","modules/error.ts","resources/configs.ts","sagas/requests.ts","sagas/masters.ts","resources/messages.ts","sagas/settings.ts","sagas/root.ts","store.ts","index.tsx"],"names":["module","exports","COMMON_ACTIONS","getMaster","type","payload","isOk","initialState","reduce","res","key","Object","create","isProcessing","isNarrowMode","showSnackBar","snackBarSeverity","undefined","tabs","category","pages","id","name","common","state","action","severity","Alert","props","elevation","variant","SlideSnackbar","Button","onClick","Snackbar","open","autoHideDuration","onClose","hideSnackBar","connect","dispatch","withRouter","React","useState","anchorEl","setAnchorEl","isOpen","Boolean","handlePopperOpen","event","currentTarget","handlePopperClose","menuList","tab","map","item","idx","ary","MenuItem","path","history","push","onMouseEnter","onMouseLeave","ListItem","button","aria-controls","aria-haspopup","Popper","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","AccountMenu","handleMenuClose","IconButton","edge","aria-label","color","role","autoFocusItem","onKeyDown","GlobalHeader","className","AppBar","position","Toolbar","Typography","CircularDeterminate","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","value","Dashboard","styles","dashboard","AlertDialog","setOpen","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","ConfirmDialog","KbAdd","console","log","onClickClose","onClickNo","onClickOk","Publish","Train","Test","setValue","FormControl","component","FormLabel","RadioGroup","onChange","target","FormControlLabel","control","Radio","label","labelPlacement","accept","multiple","hidden","htmlFor","KbApply","activeStep","setActiveStep","Set","completed","handleStep","step","Stepper","alternativeLabel","nonLinear","index","Step","StepButton","has","onChangeIndex","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","title","field","editComponent","TextField","multiline","rowsMax","e","data","question","answer","category1","category2","category3","category4","category5","setState","icons","components","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice","KbEdit","MasterCategory","MasterOthers","setAge","Select","displayEmpty","SETTING_ACTIONS","settings","isLoading","setting","options","draggable","search","sorting","showTitle","paging","isEditable","reject","updateSettings","localization","body","editRow","saveTooltip","cancelTooltip","deleteText","addTooltip","deleteTooltip","editTooltip","Settings","getSettings","Routes","exact","to","App","window","location","hostname","match","ERROR_ACTIONS","openErrDialog","errMsg","errTitle","error","msg","APP_CONFIGS","process","trim","URLS","BASE","SUB","SETTINGS","MASTERS","axiosInstance","axios","baseURL","getByAxios","url","a","async","headers","params","get","then","catch","err","postByAxios","post","call","statusCode","masters","takeLatest","ERR_MESSAGES","ERR_TITLES","put","status","rootSaga","all","rootReducer","redux","middlewares","logger","createLogger","diff","collapsed","ReactDOM","render","store","sagaMiddleware","createSagaMiddleware","run","configureStore","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0faaea3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__1-CzE\",\"red\":\"app_red__2mt6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__3V8Kp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hidden\":\"kbApply_hidden__23sSE\"};","import { Color } from \"@material-ui/lab/Alert\";\r\n\r\n// actions\r\nexport const COMMON_ACTIONS = {\r\n  START_PROCESS: \"START_PROCESS\" as const,\r\n  END_PROCESS: \"END_PROCESS\" as const,\r\n  SWITCH_NARROW_MODE: \"SWITCH_NARROW_MODE\" as const,\r\n  GET_MASTER: \"GET_MASTER\" as const,\r\n  SHOW_SNACK_BAR: \"SHOW_SNACK_BAR\" as const,\r\n  HIDE_SNACK_BAR: \"HIDE_SNACK_BAR\" as const\r\n};\r\n\r\n// action creaters\r\nexport const getMaster = () => {\r\n  return {\r\n    type: COMMON_ACTIONS.GET_MASTER,\r\n    payload: { isOk: true }\r\n  };\r\n};\r\n\r\nexport const startProgress = () => {\r\n  return {\r\n    type: COMMON_ACTIONS.START_PROCESS\r\n  };\r\n};\r\n\r\nexport const endProgress = () => {\r\n  return {\r\n    type: COMMON_ACTIONS.END_PROCESS\r\n  };\r\n};\r\n\r\nexport const switchDispMode = () => {\r\n  return {\r\n    type: COMMON_ACTIONS.SWITCH_NARROW_MODE\r\n  };\r\n};\r\n\r\nexport const showSnackBar = (severity: Color) => {\r\n  return {\r\n    type: COMMON_ACTIONS.SHOW_SNACK_BAR,\r\n    payload: { severity }\r\n  };\r\n};\r\n\r\nexport const hideSnackBar = () => {\r\n  return {\r\n    type: COMMON_ACTIONS.HIDE_SNACK_BAR\r\n  };\r\n};\r\n\r\ntype ActionTypes = ReturnType<\r\n  | typeof getMaster\r\n  | typeof startProgress\r\n  | typeof endProgress\r\n  | typeof switchDispMode\r\n  | typeof showSnackBar\r\n  | typeof hideSnackBar\r\n>;\r\n\r\nconst strEnum = <T extends string>(o: Array<T>): { [K in T]: K } => {\r\n  return o.reduce((res, key) => {\r\n    res[key] = key;\r\n    return res;\r\n  }, Object.create(null));\r\n};\r\nexport const Severity = strEnum([\"info\", \"succes\", \"warning\", \"error\"]);\r\n\r\n// reducer\r\ntype StateTypes = {\r\n  isProcessing: boolean;\r\n  isNarrowMode: boolean;\r\n  showSnackBar: boolean;\r\n  snackBarSeverity?: Color;\r\n  tabs: any[];\r\n};\r\n\r\nconst initialState: StateTypes = {\r\n  isProcessing: false,\r\n  isNarrowMode: false,\r\n  showSnackBar: false,\r\n  snackBarSeverity: undefined,\r\n  tabs: [\r\n    { category: \"ダッシュボード\", pages: [{ id: \"\", name: \"ダッシュボード\" }] },\r\n    {\r\n      category: \"KB\",\r\n      pages: [\r\n        { id: \"kbAdd\", name: \"追加\" },\r\n        { id: \"kbEdit\", name: \"編集\" },\r\n        { id: \"kbApply\", name: \"適用\" }\r\n      ]\r\n    },\r\n    {\r\n      category: \"マスタ\",\r\n      pages: [\r\n        { id: \"category\", name: \"QAカテゴリ\" },\r\n        { id: \"others\", name: \"その他\" }\r\n      ]\r\n    },\r\n    { category: \"設定\", pages: [{ id: \"settings\", name: \"設定\" }] }\r\n  ]\r\n};\r\n\r\nconst common = (state = initialState, action: ActionTypes): StateTypes => {\r\n  switch (action.type) {\r\n    //プログレスリングの開始\r\n    case COMMON_ACTIONS.START_PROCESS:\r\n      return {\r\n        ...state,\r\n        isProcessing: true\r\n      };\r\n    //プログレスリングの終了\r\n    case COMMON_ACTIONS.END_PROCESS:\r\n      return {\r\n        ...state,\r\n        isProcessing: false\r\n      };\r\n    //画面幅による表示モードの切り替え\r\n    case COMMON_ACTIONS.SWITCH_NARROW_MODE:\r\n      return {\r\n        ...state,\r\n        isNarrowMode: !state.isNarrowMode\r\n      };\r\n    //スナックバーの表示\r\n    case COMMON_ACTIONS.SHOW_SNACK_BAR:\r\n      return {\r\n        ...state,\r\n        showSnackBar: true,\r\n        snackBarSeverity: action.payload.severity\r\n      };\r\n    //スナックバーの非表示\r\n    case COMMON_ACTIONS.HIDE_SNACK_BAR:\r\n      return {\r\n        ...state,\r\n        showSnackBar: false\r\n      };\r\n    case \"GET_MASTER\":\r\n      return {\r\n        ...state,\r\n        isProcessing: action.payload.isOk\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default common;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { forwardRef } from \"react\";\r\nimport { Props } from \"./SlideSnackbarCont\";\r\n\r\nconst Alert = (props: AlertProps) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst SlideSnackbar: React.FC<Props> = props => {\r\n  return (\r\n    <div>\r\n      <Button onClick={() => props.showSnackBar(\"error\")}>スナックバーテスト</Button>\r\n      <Snackbar open={props.open} autoHideDuration={3000}>\r\n        <Alert onClose={props.hideSnackBar} severity={props.severity}>\r\n          This is a {props.severity} message!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideSnackbar;\r\n","import { Color } from \"@material-ui/lab/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport { Action, Dispatch } from \"redux\";\r\nimport { hideSnackBar, showSnackBar } from \"../../modules/common\";\r\nimport { rootReducer } from \"../../store\";\r\nimport SlideSnackbar from \"./SlideSnackbar\";\r\n\r\nconst mapStateToProps = (state: ReturnType<typeof rootReducer>) => {\r\n  return {\r\n    severity: state.common.snackBarSeverity,\r\n    open: state.common.showSnackBar\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<string>>) => {\r\n  return {\r\n    showSnackBar: (severity: Color) => dispatch(showSnackBar(severity)),\r\n    hideSnackBar: () => dispatch(hideSnackBar())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SlideSnackbar);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n","import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport React from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\n// react-routerのLinkではないものをクリックしてページ遷移するためにRouteComponentPropsを型として継承させる必要がある\r\ntype Props = RouteComponentProps & {\r\n  tab: { category: string; pages: { id: string; name: string }[] };\r\n};\r\n\r\nconst HoverMenu: React.FC<Props> = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handlePopperOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopperClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ページ遷移\r\n  const handleMovePage = (path: string) => {\r\n    props.history.push(\"/\" + path);\r\n  };\r\n\r\n  // マウスオーバー時に出てくるメニュー（各ページ）の作成\r\n  const menuList = props.tab.pages.map((item, idx, ary) => (\r\n    <MenuItem onClick={() => handleMovePage(item.id)} key={idx}>\r\n      {item.name}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <div onMouseEnter={handlePopperOpen} onMouseLeave={handlePopperClose}>\r\n      {/* ヘッダーに常に表示されているタブ */}\r\n      <ListItem\r\n        button\r\n        onClick={handlePopperOpen}\r\n        aria-controls={isOpen ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        {props.tab.category}\r\n      </ListItem>\r\n      {/* マウスオーバー時に出てくるメニュー */}\r\n      <Popper open={isOpen} anchorEl={anchorEl} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handlePopperClose}>\r\n                <MenuList id=\"menu-list-grow\">{menuList}</MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(HoverMenu);\r\n","import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport React from \"react\";\r\n\r\nconst AccountMenu: React.FC = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // アカウントメニューのID（コントロールとの紐づけ）\r\n  const menuId = \"primary-search-account-menu\";\r\n\r\n  return (\r\n    <div>\r\n      {/* アカウントメニューボタン */}\r\n      <IconButton\r\n        edge=\"end\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls={menuId}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenuOpen}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      {/* アカウントメニュー */}\r\n      <Popper open={isOpen} anchorEl={anchorEl} role={undefined} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\" }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleMenuClose}>\r\n                <MenuList autoFocusItem={isOpen} id=\"menu-list-grow\" onKeyDown={handleMenuClose}>\r\n                  <MenuItem onClick={handleMenuClose}>ログアウト</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport HoverMenu from \"./HoverMenu\";\r\nimport AccountMenu from \"./AccountMenu\";\r\n\r\nconst GlobalHeader: React.FC = (props: any) => {\r\n  // ドロワーの開閉ステート\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // タブ（ページ）要素の構築\r\n  const tabs = props.tabs.map((item: any, idx: number, ary: []) => <HoverMenu tab={item} key={idx} />);\r\n\r\n  // タブ用アンカー\r\n  return (\r\n    <div className=\"\">\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          {/* ハンバーガーメニュー */}\r\n          {/* <IconButton edge=\"start\" className={\"\"} color=\"inherit\" aria-label=\"menu\" onClick={() => setOpen(!open)}> */}\r\n          <IconButton edge=\"start\" className={\"\"} color=\"inherit\" aria-label=\"menu\" onClick={() => props.getMaster()}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* タイトル */}\r\n          <Typography variant=\"h6\" className={\"\"}>\r\n            管理ツール\r\n          </Typography>\r\n          {/* タブ */}\r\n          {tabs}\r\n          {/* アカウントボタン */}\r\n          <AccountMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalHeader;\r\n","import { connect } from \"react-redux\";\r\nimport { Action, Dispatch } from \"redux\";\r\nimport { getMaster } from \"../../modules/common\";\r\nimport { rootReducer } from \"../../store\";\r\nimport GlobalHeader from \"./GlobalHeader\";\r\n\r\nconst mapStateToProps = (state: ReturnType<typeof rootReducer>) => {\r\n  return {\r\n    tabs: state.common.tabs\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<string>>) => {\r\n  return {\r\n    getMaster: () => dispatch(getMaster())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalHeader);\r\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React from \"react\";\r\n\r\nconst CircularDeterminate: React.FC = () => {\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  // サークルが1周したら初めからまた回す非同期処理\r\n  React.useEffect(() => {\r\n    const tick = () => setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <CircularProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircularDeterminate;\r\n","import React from \"react\";\r\nimport CircularDeterminate from \"../common/CircularDeterminate\";\r\nimport styles from \"./dashboard.module.scss\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <div>ここは…ダッシュボードの世界…</div>\r\n      <CircularDeterminate />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClickClose: () => void;\r\n};\r\n\r\nconst AlertDialog: React.FC<Props> = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className={\"\"}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">アラートダイアログ</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            閉じる\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDialog;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClickOk: () => void;\r\n  onClickNo: () => void;\r\n};\r\n\r\nconst ConfirmDialog: React.FC<Props> = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open confirm dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">確認ダイアログ</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            いいえ\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            はい\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\nimport AlertDialog from \"../common/AlertDialog\";\r\nimport ConfirmDialog from \"../common/ConfirmDialog\";\r\n\r\nconst KbAdd: React.FC = props => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"\">\r\n      <div className={\"red\"}>追加は分離させたほうがいい</div>\r\n      <AlertDialog open={true} onClickClose={() => {}} />\r\n      <ConfirmDialog open={true} onClickNo={() => {}} onClickOk={() => {}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KbAdd;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styles from \"./kbApply.module.scss\";\r\n\r\nconst Publish: React.FC = (props: any) => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"secondary\">\r\n        公開\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Publish;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styles from \"./kbApply.module.scss\";\r\n\r\nconst Train: React.FC = (props: any) => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        訓練開始\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Train;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styles from \"./kbApply.module.scss\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst Test: React.FC = (props: any) => {\r\n  const [value, setValue] = React.useState(\"既存に追加\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        現在のファイル出力\r\n      </Button>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">追加方法</FormLabel>\r\n        <RadioGroup aria-label=\"gender\" name=\"gender2\" value={value} onChange={handleChange}>\r\n          <FormControlLabel\r\n            value=\"既存に追加\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"既存に追加\"\r\n            labelPlacement=\"start\"\r\n          />\r\n          <FormControlLabel\r\n            value=\"全件入れ替え\"\r\n            control={<Radio color=\"primary\" />}\r\n            label=\"全件入れ替え\"\r\n            labelPlacement=\"start\"\r\n          />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <input\r\n        accept=\"image/*\"\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"\r\n        className={styles.hidden}\r\n      />\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n          ファイル選択\r\n        </Button>\r\n      </label>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        テスト開始\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepButton from \"@material-ui/core/StepButton\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport styles from \"./kbApply.module.scss\";\r\nimport Publish from \"./Publish\";\r\nimport Train from \"./Train\";\r\nimport Test from \"./Test\";\r\n\r\nconst KbApply: React.FC = (props: any) => {\r\n  const steps = [\"訓練\", \"テスト\", \"公開\"];\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState(new Set<number>());\r\n  const [skipped, setSkipped] = React.useState(new Set<number>());\r\n\r\n  const isStepOptional = (step: number) => {\r\n    return step === 1;\r\n  };\r\n\r\n  const handleStep = (step: number) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const isStepComplete = (step: number) => {\r\n    return completed.has(step);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Stepper alternativeLabel nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => {\r\n          const stepProps: { completed?: boolean } = {};\r\n          const buttonProps: { optional?: React.ReactNode } = {};\r\n          return (\r\n            <Step key={label} {...stepProps}>\r\n              <StepButton\r\n                onClick={handleStep(index)}\r\n                completed={isStepComplete(index)}\r\n                {...buttonProps}\r\n              >\r\n                {label}\r\n              </StepButton>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n      <SwipeableViews\r\n        // axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={activeStep}\r\n        onChangeIndex={handleStep}\r\n      >\r\n        <Train />\r\n        <Test />\r\n        <Publish />\r\n      </SwipeableViews>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KbApply;\r\n","import { connect } from \"react-redux\";\r\nimport { Action, Dispatch } from \"redux\";\r\nimport { getMaster } from \"../../modules/common\";\r\nimport { rootReducer } from \"../../store\";\r\nimport KbApply from \"./KbApply\";\r\n\r\nconst mapStateToProps = (state: ReturnType<typeof rootReducer>) => {\r\n  return {\r\n    tabs: state.common.showSnackBar,\r\n    severity: state.common.snackBarSeverity\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<string>>) => {\r\n  return {\r\n    getMaster: () => dispatch(getMaster())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(KbApply);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n","import React from \"react\";\r\nimport \"./kbEdit.scss\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { forwardRef } from \"react\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Icons } from \"material-table\";\r\n\r\ninterface Row {\r\n  question: string;\r\n  answer: string;\r\n  category1: string;\r\n  category2: string;\r\n  category3: string;\r\n  category4: string;\r\n  category5: string;\r\n}\r\n\r\ninterface TableState {\r\n  columns: Array<Column<Row>>;\r\n  data: Row[];\r\n}\r\n\r\nconst tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst column = [];\r\nconst Table: React.FC = props => {\r\n  const [state, setState] = React.useState<TableState>({\r\n    columns: [\r\n      {\r\n        title: \"質問\",\r\n        field: \"question\",\r\n        editComponent: props => (\r\n          <TextField multiline rowsMax=\"4\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n        )\r\n      },\r\n      {\r\n        title: \"回答\",\r\n        field: \"answer\",\r\n        editComponent: props => (\r\n          <TextField multiline rowsMax=\"4\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n        )\r\n      },\r\n      { title: \"カテゴリ1\", field: \"category1\" },\r\n      { title: \"カテゴリ2\", field: \"category2\" },\r\n      { title: \"カテゴリ3\", field: \"category3\" },\r\n      { title: \"カテゴリ4\", field: \"category4\" },\r\n      { title: \"カテゴリ5\", field: \"category5\" }\r\n    ],\r\n    data: [\r\n      {\r\n        question: \"これはReactで作られてますか？\",\r\n        answer: \"そうです\",\r\n        category1: \"JavaScript\",\r\n        category2: \"React\",\r\n        category3: \"\",\r\n        category4: \"\",\r\n        category5: \"\"\r\n      },\r\n      {\r\n        question: \"バックエンドはC#ですか？\",\r\n        answer: \"そうです\",\r\n        category1: \"Microsoft\",\r\n        category2: \"C#\",\r\n        category3: \".net core\",\r\n        category4: \"\",\r\n        category5: \"\"\r\n      }\r\n    ]\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      icons={tableIcons}\r\n      components={{}}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          })\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n// import styles from \"./kbEdit.module.scss\";\r\nimport Table from \"./Table\";\r\n\r\nconst KbEdit: React.FC = props => {\r\n  console.log(props);\r\n  return (\r\n    // <div className={styles.kbEdit}>\r\n    <div>\r\n      <Table />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KbEdit;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styles from \"./kbApply.module.scss\";\r\n\r\nconst MasterCategory: React.FC = (props: any) => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        更新\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        ファイル出力\r\n      </Button>\r\n      <Button variant=\"contained\" color=\"primary\">\r\n        ファイル取り込み\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MasterCategory;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n// import { Props } from \"./SettingsCont\";\r\n// import Table from \"./Table\";\r\n\r\nconst MasterOthers: React.FC = () => {\r\n  const [name, setAge] = React.useState(\"\");\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setAge(event.target.value as string);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormControl>\r\n        <Select value={name} onChange={handleChange} displayEmpty>\r\n          <MenuItem value=\"\">\r\n            <em>None</em>\r\n          </MenuItem>\r\n          <MenuItem value={\"ユーザー\"}>ユーザー</MenuItem>\r\n          <MenuItem value={\"いろんな\"}>いろんな</MenuItem>\r\n          <MenuItem value={\"DB\"}>DB</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      {/* <Table\r\n        data={props.settings}\r\n        isLoading={props.isLoading}\r\n        updateSettings={props.updateSettings}\r\n      />\r\n      <Button onClick={props.getSettings}>サーバーからデータとってくる</Button> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MasterOthers;\r\n","// #region actions\r\nexport const SETTING_ACTIONS = {\r\n  GET_SETTINGS: \"GET_SETTINGS\" as const,\r\n  GET_SETTINGS_SUCCESS: \"GET_SETTINGS_SUCCESS\" as const,\r\n  UPDATE_SETTINGS: \"UPDATE_SETTINGS\" as const,\r\n  UPDATE_SETTINGS_SUCCESS: \"UPDATE_SETTINGS_SUCCESS\" as const,\r\n  UPDATE_SETTINGS_FAILURE: \"UPDATE_SETTINGS_FAILURE\" as const\r\n};\r\n// #endregion\r\n\r\n// #region action creaters\r\nexport const getSettings = () => {\r\n  return {\r\n    type: SETTING_ACTIONS.GET_SETTINGS\r\n  };\r\n};\r\nexport const getSettingsSuccess = (data: Setting[]) => {\r\n  return {\r\n    type: SETTING_ACTIONS.GET_SETTINGS_SUCCESS,\r\n    payload: { data }\r\n  };\r\n};\r\nexport const updateSettings = (data: Setting) => {\r\n  return {\r\n    type: SETTING_ACTIONS.UPDATE_SETTINGS,\r\n    payload: { data }\r\n  };\r\n};\r\nexport const updateSettingsSuccess = () => {\r\n  return {\r\n    type: SETTING_ACTIONS.UPDATE_SETTINGS_SUCCESS\r\n  };\r\n};\r\nexport const updateSettingsFailure = () => {\r\n  return {\r\n    type: SETTING_ACTIONS.UPDATE_SETTINGS_FAILURE\r\n  };\r\n};\r\n\r\ntype ActionTypes = ReturnType<\r\n  | typeof getSettingsSuccess\r\n  | typeof updateSettings\r\n  | typeof updateSettingsSuccess\r\n  | typeof updateSettingsFailure\r\n>;\r\n// #endregion\r\n\r\n// #region reducer\r\nexport type Setting = {\r\n  id: number;\r\n  name: string;\r\n  value: string | number;\r\n};\r\n\r\nexport type StateTypes = {\r\n  settings: Setting[];\r\n  isLoading: boolean;\r\n};\r\n\r\nconst initialState: StateTypes = {\r\n  settings: [\r\n    { id: 1, name: \"なんか\", value: 100 },\r\n    { id: 2, name: \"いろいろな\", value: 100 },\r\n    { id: 3, name: \"項目\", value: \"23:59\" },\r\n    { id: 4, name: \"です\", value: 100 }\r\n  ],\r\n  isLoading: false\r\n};\r\n\r\nconst setting = (state = initialState, action: ActionTypes): StateTypes => {\r\n  switch (action.type) {\r\n    case SETTING_ACTIONS.GET_SETTINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        settings: action.payload.data\r\n      };\r\n    case SETTING_ACTIONS.UPDATE_SETTINGS:\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case SETTING_ACTIONS.UPDATE_SETTINGS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    case SETTING_ACTIONS.UPDATE_SETTINGS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// #endregion\r\n\r\nexport default setting;\r\n","import AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Icons } from \"material-table\";\r\nimport React, { forwardRef } from \"react\";\r\n\r\nconst tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nexport default tableIcons;\r\n","import MaterialTable, { Column } from \"material-table\";\r\nimport React from \"react\";\r\nimport tableIcons from \"../common/TableSettings\";\r\nimport { Setting } from \"../../modules/setting\";\r\n\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\ntype Props = {\r\n  data: Setting[];\r\n  isLoading: boolean;\r\n  updateSettings: (data: Setting) => void;\r\n};\r\n\r\nconst Table: React.FC<Props> = props => {\r\n  // const [state, setState] = React.useState<Column<Setting>[]>([\r\n  //   // { field: \"id\"},\r\n  //   { title: \"設定項目\", field: \"name\", editable: \"never\" },\r\n  //   { title: \"設定値\", field: \"value\" }\r\n  // ]);\r\n  const columns: Column<Setting>[] = [\r\n    // { title: \"ID\", field: \"id\"},\r\n    { title: \"設定項目\", field: \"name\", editable: \"never\" },\r\n    // { title: \"設定項目\", field: \"name\" },\r\n    { title: \"設定値\", field: \"value\" }\r\n  ];\r\n\r\n  return (\r\n    <MaterialTable\r\n      columns={columns}\r\n      data={props.data}\r\n      icons={tableIcons}\r\n      isLoading={props.isLoading}\r\n      options={{\r\n        draggable: false,\r\n        search: false,\r\n        sorting: false,\r\n        showTitle: false,\r\n        paging: false\r\n      }}\r\n      // actions={[\r\n      //   {\r\n      //     icon: () => <Edit />,\r\n      //     tooltip: \"編集\",\r\n      //     onClick: (event: any, data: any) => props.updateSettings(data)\r\n      //   }\r\n      // ]}\r\n      editable={{\r\n        isEditable: () => true,\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise((resolve, reject) => {\r\n            props.updateSettings(newData);\r\n            resolve();\r\n          })\r\n      }}\r\n      localization={{\r\n        body: {\r\n          editRow: {\r\n            saveTooltip: \"保存\",\r\n            cancelTooltip: \"キャンセル\",\r\n            deleteText: \"削除\"\r\n          },\r\n          addTooltip: \"追加\",\r\n          deleteTooltip: \"削除\",\r\n          editTooltip: \"編集\"\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Props } from \"./SettingsCont\";\r\nimport Table from \"./Table\";\r\n\r\nconst Settings: React.FC<Props> = props => {\r\n  return (\r\n    <div>\r\n      <Table\r\n        data={props.settings}\r\n        isLoading={props.isLoading}\r\n        updateSettings={props.updateSettings}\r\n      />\r\n      <Button onClick={props.getSettings}>サーバーからデータとってくる</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { connect } from \"react-redux\";\r\nimport { Action, Dispatch } from \"redux\";\r\nimport { getSettings, updateSettings, Setting } from \"../../modules/setting\";\r\nimport { rootReducer } from \"../../store\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst mapStateToProps = (state: ReturnType<typeof rootReducer>) => {\r\n  return {\r\n    settings: state.setting.settings,\r\n    isLoading: state.setting.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<string>>) => {\r\n  return {\r\n    getSettings: () => dispatch(getSettings()),\r\n    updateSettings: (data: Setting) => dispatch(updateSettings(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\nexport type Props = StateProps & DispatchProps;\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport KbAdd from \"./kbAdd/KbAdd\";\r\nimport KbApply from \"./kbApply/KbApplyCont\";\r\nimport KbEdit from \"./kbEdit/KbEdit\";\r\nimport MasterCategory from \"./masterCategory/MasterCategory\";\r\nimport MasterOthers from \"./masterOthers/MasterOthers\";\r\nimport Settings from \"./settings/SettingsCont\";\r\n\r\n// optimize import shift alt o\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Dashboard} />\r\n      <Route exact path=\"/KbEdit\" component={KbEdit} />\r\n      <Route exact path=\"/kbAdd\" component={KbAdd} />\r\n      <Route exact path=\"/kbApply\" component={KbApply} />\r\n      <Route exact path=\"/settings\" component={Settings} />\r\n      <Route exact path=\"/category\" component={MasterCategory} />\r\n      <Route exact path=\"/others\" component={MasterOthers} />\r\n      {/* <Route>404のっとふぁうんど</Route> */}\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport styles from \"./app.module.scss\";\r\n// import * as styles from \"./app.module.scss\";\r\nimport SlideSnackbar from \"./components/common/SlideSnackbarCont\";\r\nimport GlobalHeader from \"./components/globalHeader/GlobalHeaderCont\";\r\nimport Routes from \"./components/Routes\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className={styles.App}>\r\n      {/* 共通ヘッダー */}\r\n      <GlobalHeader />\r\n      {/* メインコンテンツ */}\r\n      <Routes />\r\n      {/* スナックバー */}\r\n      <SlideSnackbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// actions\r\nexport const ERROR_ACTIONS = {\r\n  OPEN_ERR_DIALOG: \"OPEN_ERR_DIALOG\" as const,\r\n  CLOSE_ERR_DIALOG: \"CLOSE_ERR_DIALOG\" as const\r\n};\r\n\r\n// action creaters\r\nexport const openErrDialog = (title: string, msg: string) => {\r\n  return {\r\n    type: ERROR_ACTIONS.OPEN_ERR_DIALOG,\r\n    payload: {\r\n      title,\r\n      msg\r\n    }\r\n  };\r\n};\r\n\r\nexport const closeErrDialog = () => {\r\n  return {\r\n    type: ERROR_ACTIONS.CLOSE_ERR_DIALOG\r\n  };\r\n};\r\n\r\ntype ActionTypes = ReturnType<typeof openErrDialog | typeof closeErrDialog>;\r\n\r\n// reducer\r\ntype StateTypes = {\r\n  openErrDialog: boolean;\r\n  errMsg: string;\r\n  errTitle: string;\r\n};\r\n\r\nconst initialState: StateTypes = {\r\n  openErrDialog: false,\r\n  errMsg: \"\",\r\n  errTitle: \"\"\r\n};\r\n\r\nconst error = (state = initialState, action: ActionTypes): StateTypes => {\r\n  switch (action.type) {\r\n    //エラーダイアログを表示\r\n    case ERROR_ACTIONS.OPEN_ERR_DIALOG:\r\n      return {\r\n        ...state,\r\n        openErrDialog: true,\r\n        errMsg: action.payload.msg,\r\n        errTitle: action.payload.title\r\n      };\r\n    //エラーダイアログを非表示\r\n    case ERROR_ACTIONS.CLOSE_ERR_DIALOG:\r\n      return {\r\n        ...state,\r\n        openErrDialog: false,\r\n        errMsg: \"\",\r\n        errTitle: \"\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default error;\r\n","//アプリの設定\r\nexport const APP_CONFIGS = {\r\n  //開発時フラグ\r\n  IS_DEVELOP: process.env.REACT_APP_MY_ENV?.trim() === \"dev\",\r\n  //画面モード切替の閾値\r\n  WINDOW_MODE_THRESHOLD: 750,\r\n  //API Gateway用のkey\r\n  API_KEY: \"\"\r\n};\r\n\r\n//APIのURL\r\nexport const URLS = {\r\n  BASE: APP_CONFIGS.IS_DEVELOP ? \"http://localhost:3100/\" : \"\",\r\n  SUB: \"react-faq-tool\",\r\n  // SUB: \"/react-faq-tool/\",\r\n  SETTINGS: \"settings\",\r\n  MASTERS: \"masters\",\r\n};\r\n","import axios from \"axios\";\r\nimport { URLS } from \"../resources/configs\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: URLS.BASE\r\n});\r\n\r\nexport const getByAxios = async <T>(url: string, { headers = {}, params = {} } = {}) => {\r\n  return axiosInstance\r\n    .get<T>(url, { headers, params })\r\n    .then(res => {\r\n      return { res };\r\n    })\r\n    .catch(err => {\r\n      return { err };\r\n    });\r\n};\r\n\r\nexport const postByAxios = async <T>(\r\n  url: string,\r\n  body: object,\r\n  { headers = {}, params = {} } = {}\r\n) => {\r\n  return axiosInstance\r\n    .post<T>(url, body, { headers, params })\r\n    .then(res => {\r\n      return { res };\r\n    })\r\n    .catch(err => {\r\n      return { err };\r\n    });\r\n};\r\n\r\nexport const putByAxios = async <T>(\r\n  url: string,\r\n  body: object,\r\n  { headers = {}, params = {} } = {}\r\n) => {\r\n  return axiosInstance\r\n    .put<T>(url, body, { headers, params })\r\n    .then(res => {\r\n      return { res };\r\n    })\r\n    .catch(err => {\r\n      return { err };\r\n    });\r\n};\r\n\r\nexport const patchByAxios = async <T>(\r\n  url: string,\r\n  body: object,\r\n  { headers = {}, params = {} } = {}\r\n) => {\r\n  return axiosInstance\r\n    .patch<T>(url, body, { headers, params })\r\n    .then(res => {\r\n      return { res };\r\n    })\r\n    .catch(err => {\r\n      return { err };\r\n    });\r\n};\r\n\r\nexport const deleteByAxios = async <T>(url: string, { headers = {}, params = {} } = {}) => {\r\n  return axiosInstance\r\n    .delete<T>(url, { headers, params })\r\n    .then(res => {\r\n      return { res };\r\n    })\r\n    .catch(err => {\r\n      return { err };\r\n    });\r\n};\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { postByAxios } from \"./requests\";\r\nimport { COMMON_ACTIONS } from \"../modules/common\";\r\n// import { ERR_MESSAGES, ERR_TITLES } from \"../../Resourses/Messages\";\r\n\r\nfunction* getMaster(action: any) {\r\n  //プログレスリングの開始\r\n  // yield put(startProcess());\r\n  //APIコール\r\n  // const { res, err } = yield call(() => postByAxios(URLS.GET_TOILET_STATS, action.payload.facil));\r\n  console.log(action.payload);\r\n  const { res, err } = yield call(() => postByAxios(\"\", { isOk: action.payload.isOk }));\r\n  // 400や500エラーの時は、本来はAPI GatewayでstatusCodeを合わせて送るが、今回は200のボディにそのままLambdaでのエラーが入っている\r\n  if (res && res.data.statusCode >= 200 && res.data.statusCode < 300) {\r\n    // Lambdaで処理が行われて、結果が正常系の場合\r\n    // 200系の場合\r\n    //プログレスリングの終了、リクエスト成功イベントのput\r\n    // yield put(endProcess());\r\n    // yield put(getToiletInfoSuccess(res.data));\r\n  } else {\r\n    // どこかで異常が起きた場合\r\n    //プログレスリングの終了、リクエスト失敗イベントのput、エラーダイアログの開始\r\n    // yield put(endProcess());\r\n    // yield put(getToiletInfoFailure(err));\r\n    // yield put(\r\n    //   openErrDialog(ERR_MESSAGES.TOILET_STATS_FETCH_ERR, ERR_TITLES.TOILET_STATS_FETCH_ERR)\r\n    // );\r\n  }\r\n}\r\n\r\nexport const masters = [takeLatest(COMMON_ACTIONS.GET_MASTER, getMaster)];\r\n","export const ERR_MESSAGES = {\r\n  ERROR: \"データの取得に失敗しました。少々時間をおいてから再度お試しください。\"\r\n};\r\n\r\nexport const ERR_TITLES = {\r\n  ERROR: \"データ取得エラー\"\r\n};\r\n","import { AxiosResponse } from \"axios\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { endProgress, startProgress } from \"../modules/common\";\r\nimport { openErrDialog } from \"../modules/error\";\r\nimport { getSettingsSuccess, Setting, SETTING_ACTIONS } from \"../modules/setting\";\r\nimport { URLS } from \"../resources/configs\";\r\nimport { ERR_MESSAGES, ERR_TITLES } from \"../resources/messages\";\r\nimport { getByAxios } from \"./requests\";\r\n\r\nfunction* getSettings() {\r\n  yield put(startProgress());\r\n  // エラーはいろんな型があるためany\r\n  const { res, err }: { res: AxiosResponse<Setting[]>; err: any } = yield call(() =>\r\n    getByAxios<Setting[]>(URLS.SETTINGS)\r\n  );\r\n  yield put(endProgress());\r\n  if (res && res.status === 200) {\r\n    console.log(res.data);\r\n    yield put(getSettingsSuccess(res.data));\r\n  } else if (err) {\r\n    yield put(openErrDialog(ERR_TITLES.ERROR, ERR_MESSAGES.ERROR));\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport const settings = [takeLatest(SETTING_ACTIONS.GET_SETTINGS, getSettings)];\r\n","import { all } from \"redux-saga/effects\";\r\nimport { masters } from \"./masters\";\r\nimport { settings } from \"./settings\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([...masters, ...settings]);\r\n}\r\n","import * as redux from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport common from \"./modules/common\";\r\nimport error from \"./modules/error\";\r\nimport setting from \"./modules/setting\";\r\nimport { APP_CONFIGS } from \"./resources/configs\";\r\nimport rootSaga from \"./sagas/root\";\r\n\r\nexport const rootReducer = redux.combineReducers({ common, error, setting });\r\n\r\n// いろんな型のミドルウェアを登録するためここはany\r\nconst middlewares: any = [];\r\n\r\n//開発時のみredux-loggerを適用\r\nif (APP_CONFIGS.IS_DEVELOP) {\r\n  //loggerオブジェクトの生成\r\n  const logger = createLogger({\r\n    diff: true,\r\n    collapsed: true\r\n  });\r\n  //loggerオブジェクトをmiddlewaresへ追加\r\n  middlewares.push(logger);\r\n}\r\n\r\n//storeを生成する関数\r\nexport const configureStore = () => {\r\n  //sagaMiddlewareオブジェクトの生成とmiddlewaresへの追加\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  middlewares.push(sagaMiddleware);\r\n  //storeの設定\r\n  const store = redux.createStore(rootReducer, redux.applyMiddleware(...middlewares));\r\n  //sagaMiddlewareの開始\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { configureStore } from \"./store\";\r\nimport { URLS } from \"./resources/configs\";\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Router basename={URLS.SUB}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}