{"version":3,"sources":["app.module.scss","components/dashboard/dashboard.module.scss","components/common/CircularDeterminate.tsx","components/dashboard/Dashboard.tsx","components/kbEdit/Table.tsx","components/kbEdit/KbEdit.tsx","components/common/AlertDialog.tsx","components/common/ConfirmDialog.tsx","components/common/SlideSnackbar.tsx","components/kbAdd/KbAdd.tsx","components/Routes.tsx","components/globalHeader/HoverMenu.tsx","components/globalHeader/AccountMenu.tsx","components/globalHeader/GlobalHeader.tsx","components/globalHeader/GlobalHeaderCont.tsx","App.tsx","serviceWorker.ts","reducers/common.ts","sagas/apis.ts","sagas/root.ts","store.ts","index.tsx"],"names":["module","exports","CircularDeterminate","React","useState","progress","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","className","CircularProgress","variant","value","Dashboard","styles","dashboard","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Table","columns","title","field","editComponent","TextField","multiline","rowsMax","onChange","e","target","data","question","answer","category1","category2","category3","category4","category5","state","setState","icons","components","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","KbEdit","console","log","AlertDialog","open","setOpen","handleClose","Button","color","onClick","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","ConfirmDialog","Alert","elevation","SlideSnackbar","event","reason","Snackbar","autoHideDuration","severity","KbAdd","onClickClose","onClickNo","onClickOk","Routes","exact","path","component","withRouter","anchorEl","setAnchorEl","isOpen","Boolean","handlePopperOpen","currentTarget","handlePopperClose","menuList","tab","pages","map","item","idx","ary","MenuItem","history","key","name","onMouseEnter","onMouseLeave","ListItem","button","aria-controls","undefined","aria-haspopup","category","Popper","transition","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","AccountMenu","handleMenuClose","IconButton","edge","aria-label","role","autoFocusItem","onKeyDown","GlobalHeader","tabs","AppBar","position","Toolbar","Typography","connect","common","dispatch","App","window","location","hostname","match","initialState","isProcessing","isNarrowMode","action","type","payload","getToiletInfo","apiReqs","takeLatest","rootSaga","all","rootReducer","redux","middlewares","logger","createLogger","diff","collapsed","ReactDOM","render","store","sagaMiddleware","createSagaMiddleware","run","configureStore","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55110682.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"app_App__1-CzE\",\"red\":\"app_red__2mt6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__3V8Kp\"};","import CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport React from \"react\";\r\n\r\nconst CircularDeterminate: React.FC = () => {\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  // サークルが1周したら初めからまた回す非同期処理\r\n  React.useEffect(() => {\r\n    const tick = () => setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <CircularProgress variant=\"determinate\" value={progress} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CircularDeterminate;\r\n","import React from \"react\";\r\nimport CircularDeterminate from \"../common/CircularDeterminate\";\r\nimport styles from \"./dashboard.module.scss\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return (\r\n    <div className={styles.dashboard}>\r\n      <div>ここは…ダッシュボードの世界…</div>\r\n      <CircularDeterminate />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport \"./kbEdit.scss\";\r\nimport MaterialTable, { Column } from \"material-table\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport { forwardRef } from \"react\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport { Icons } from \"material-table\";\r\n\r\ninterface Row {\r\n  question: string;\r\n  answer: string;\r\n  category1: string;\r\n  category2: string;\r\n  category3: string;\r\n  category4: string;\r\n  category5: string;\r\n}\r\n\r\ninterface TableState {\r\n  columns: Array<Column<Row>>;\r\n  data: Row[];\r\n}\r\n\r\nconst tableIcons: Icons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\nconst column = [];\r\nconst Table: React.FC = props => {\r\n  const [state, setState] = React.useState<TableState>({\r\n    columns: [\r\n      {\r\n        title: \"質問\",\r\n        field: \"question\",\r\n        editComponent: props => (\r\n          <TextField multiline rowsMax=\"4\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n        )\r\n      },\r\n      {\r\n        title: \"回答\",\r\n        field: \"answer\",\r\n        editComponent: props => (\r\n          <TextField multiline rowsMax=\"4\" value={props.value} onChange={e => props.onChange(e.target.value)} />\r\n        )\r\n      },\r\n      { title: \"カテゴリ1\", field: \"category1\" },\r\n      { title: \"カテゴリ2\", field: \"category2\" },\r\n      { title: \"カテゴリ3\", field: \"category3\" },\r\n      { title: \"カテゴリ4\", field: \"category4\" },\r\n      { title: \"カテゴリ5\", field: \"category5\" }\r\n    ],\r\n    data: [\r\n      {\r\n        question: \"これはReactで作られてますか？\",\r\n        answer: \"そうです\",\r\n        category1: \"JavaScript\",\r\n        category2: \"React\",\r\n        category3: \"\",\r\n        category4: \"\",\r\n        category5: \"\"\r\n      },\r\n      {\r\n        question: \"バックエンドはC#ですか？\",\r\n        answer: \"そうです\",\r\n        category1: \"Microsoft\",\r\n        category2: \"C#\",\r\n        category3: \".net core\",\r\n        category4: \"\",\r\n        category5: \"\"\r\n      }\r\n    ]\r\n  });\r\n\r\n  return (\r\n    <MaterialTable\r\n      title=\"Editable Example\"\r\n      columns={state.columns}\r\n      data={state.data}\r\n      icons={tableIcons}\r\n      components={{}}\r\n      editable={{\r\n        onRowAdd: newData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.push(newData);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          }),\r\n        onRowUpdate: (newData, oldData) =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              if (oldData) {\r\n                setState(prevState => {\r\n                  const data = [...prevState.data];\r\n                  data[data.indexOf(oldData)] = newData;\r\n                  return { ...prevState, data };\r\n                });\r\n              }\r\n            }, 600);\r\n          }),\r\n        onRowDelete: oldData =>\r\n          new Promise(resolve => {\r\n            setTimeout(() => {\r\n              resolve();\r\n              setState(prevState => {\r\n                const data = [...prevState.data];\r\n                data.splice(data.indexOf(oldData), 1);\r\n                return { ...prevState, data };\r\n              });\r\n            }, 600);\r\n          })\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n// import styles from \"./kbEdit.module.scss\";\r\nimport Table from \"./Table\";\r\n\r\nconst KbEdit: React.FC = props => {\r\n  console.log(props);\r\n  return (\r\n    // <div className={styles.kbEdit}>\r\n    <div>\r\n      <Table />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KbEdit;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClickClose: () => void;\r\n};\r\n\r\nconst AlertDialog: React.FC<Props> = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen} className={\"\"}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">確認ダイアログ</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            閉じる\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AlertDialog;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport React from \"react\";\r\n\r\ntype Props = {\r\n  open: boolean;\r\n  onClickOk: () => void;\r\n  onClickNo: () => void;\r\n};\r\n\r\nconst ConfirmDialog: React.FC<Props> = props => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open confirm dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">確認ダイアログ</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            いいえ\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            はい\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\r\nimport { forwardRef } from \"react\";\r\n\r\nconst Alert = (props: AlertProps) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nconst SlideSnackbar = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleClick}>\r\n        Open success snackbar\r\n      </Button>\r\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          This is a success message!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Alert severity=\"error\">This is an error message!</Alert>\r\n      <Alert severity=\"warning\">This is a warning message!</Alert>\r\n      <Alert severity=\"info\">This is an information message!</Alert>\r\n      <Alert severity=\"success\">This is a success message!</Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideSnackbar;\r\n","import React from \"react\";\r\nimport AlertDialog from \"../common/AlertDialog\";\r\nimport ConfirmDialog from \"../common/ConfirmDialog\";\r\nimport SlideSnackbar from \"../common/SlideSnackbar\";\r\n\r\nconst KbAdd: React.FC = props => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"\">\r\n      <div className={\"red\"}>追加は分離させたほうがいい</div>\r\n      <AlertDialog open={true} onClickClose={() => {}} />\r\n      <ConfirmDialog open={true} onClickNo={() => {}} onClickOk={() => {}} />\r\n      <SlideSnackbar />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KbAdd;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport KbEdit from \"./kbEdit/KbEdit\";\r\nimport KbAdd from \"./kbAdd/KbAdd\";\r\n\r\nconst Routes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/dashboard\" component={Dashboard} />\r\n      <Route exact path=\"/KbEdit\" component={KbEdit} />\r\n      <Route exact path=\"/kbAdd\" component={KbAdd} />\r\n      <Route>404のっとふぁうんど</Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport React from \"react\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\n// react-routerのLinkではないものをクリックしてページ遷移するためにRouteComponentPropsを型として継承させる必要がある\r\ntype Props = RouteComponentProps & {\r\n  tab: { category: string; pages: { id: string; name: string }[] };\r\n};\r\n\r\nconst HoverMenu: React.FC<Props> = props => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handlePopperOpen = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopperClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // ページ遷移\r\n  const handleMovePage = (path: string) => {\r\n    props.history.push(\"/\" + path);\r\n  };\r\n\r\n  // マウスオーバー時に出てくるメニュー（各ページ）の作成\r\n  const menuList = props.tab.pages.map((item, idx, ary) => (\r\n    <MenuItem onClick={() => handleMovePage(item.id)} key={idx}>\r\n      {item.name}\r\n    </MenuItem>\r\n  ));\r\n\r\n  return (\r\n    <div onMouseEnter={handlePopperOpen} onMouseLeave={handlePopperClose}>\r\n      {/* ヘッダーに常に表示されているタブ */}\r\n      <ListItem\r\n        button\r\n        onClick={handlePopperOpen}\r\n        aria-controls={isOpen ? \"menu-list-grow\" : undefined}\r\n        aria-haspopup=\"true\"\r\n      >\r\n        {props.tab.category}\r\n      </ListItem>\r\n      {/* マウスオーバー時に出てくるメニュー */}\r\n      <Popper open={isOpen} anchorEl={anchorEl} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\"\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handlePopperClose}>\r\n                <MenuList id=\"menu-list-grow\">{menuList}</MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(HoverMenu);\r\n","import ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport React from \"react\";\r\n\r\nconst AccountMenu: React.FC = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  // アカウントメニューのID（コントロールとの紐づけ）\r\n  const menuId = \"primary-search-account-menu\";\r\n\r\n  return (\r\n    <div>\r\n      {/* アカウントメニューボタン */}\r\n      <IconButton\r\n        edge=\"end\"\r\n        aria-label=\"account of current user\"\r\n        aria-controls={menuId}\r\n        aria-haspopup=\"true\"\r\n        onClick={handleMenuOpen}\r\n        color=\"inherit\"\r\n      >\r\n        <AccountCircle />\r\n      </IconButton>\r\n      {/* アカウントメニュー */}\r\n      <Popper open={isOpen} anchorEl={anchorEl} role={undefined} transition disablePortal>\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{ transformOrigin: placement === \"bottom\" ? \"center top\" : \"center bottom\" }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener onClickAway={handleMenuClose}>\r\n                <MenuList autoFocusItem={isOpen} id=\"menu-list-grow\" onKeyDown={handleMenuClose}>\r\n                  <MenuItem onClick={handleMenuClose}>ログアウト</MenuItem>\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React from \"react\";\r\nimport HoverMenu from \"./HoverMenu\";\r\nimport AccountMenu from \"./AccountMenu\";\r\n\r\nconst GlobalHeader: React.FC = (props: any) => {\r\n  // ドロワーの開閉ステート\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  // タブ（ページ）要素の構築\r\n  const tabs = props.tabs.map((item: any, idx: number, ary: []) => <HoverMenu tab={item} key={idx} />);\r\n\r\n  // タブ用アンカー\r\n  return (\r\n    <div className=\"\">\r\n      <AppBar position=\"relative\">\r\n        <Toolbar>\r\n          {/* ハンバーガーメニュー */}\r\n          <IconButton edge=\"start\" className={\"\"} color=\"inherit\" aria-label=\"menu\" onClick={() => setOpen(!open)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          {/* タイトル */}\r\n          <Typography variant=\"h6\" className={\"\"}>\r\n            管理ツール\r\n          </Typography>\r\n          {/* タブ */}\r\n          {tabs}\r\n          {/* アカウントボタン */}\r\n          <AccountMenu />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobalHeader;\r\n","import { connect } from \"react-redux\";\r\nimport GlobalHeader from \"./GlobalHeader\";\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    tabs: state.common.tabs\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalHeader);\r\n","import React from \"react\";\nimport styles from \"./app.module.scss\";\n// import * as styles from \"./app.module.scss\";\n\nimport Routes from \"./components/Routes\";\nimport GlobalHeader from \"./components/globalHeader/GlobalHeaderCont\";\n\nconst App: React.FC = () => {\n  return (\n    <div className={styles.App}>\n      {/* 共通ヘッダー */}\n      <GlobalHeader />\n      {/* メインコンテンツ */}\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import { COMMON_ACTIONS } from '../Resourses/ActionTypes';\r\n\r\nconst initialState = {\r\n  isProcessing: false,\r\n  isNarrowMode: false,\r\n  tabs: [\r\n    { category: \"ダッシュボード\", pages: [{ id: \"dashboard\", name: \"ダッシュボード\" }] },\r\n    {\r\n      category: \"KB管理\",\r\n      pages: [\r\n        { id: \"kbAdd\", name: \"追加\" },\r\n        { id: \"kbEdit\", name: \"編集\" },\r\n        { id: \"kbTest\", name: \"テスト\" },\r\n        { id: \"kbTrain\", name: \"訓練\" },\r\n        { id: \"kbPublish\", name: \"公開\" }\r\n      ]\r\n    },\r\n    { category: \"設定\", pages: [{ id: \"settings\", name: \"設定\" }] }\r\n  ]\r\n};\r\n\r\nconst common = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    //プログレスリングの開始\r\n    // case COMMON_ACTIONS.START_PROCESS:\r\n    case \"START_PROCESS\":\r\n      return {\r\n        ...state,\r\n        isProcessing: true\r\n      };\r\n\r\n    //プログレスリングの終了\r\n    case \"END_PROCESS\":\r\n      return {\r\n        ...state,\r\n        isProcessing: false\r\n      };\r\n\r\n    //画面幅による表示モードの切り替え\r\n    case \"SWITCH_NARROW_MODE\":\r\n      return {\r\n        ...state,\r\n        isNarrowMode: action.payload.isNarrowMode\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state\r\n      };\r\n  }\r\n};\r\n\r\nexport default common;\r\n","import axios from \"axios\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\n// import { endProcess, startProcess } from \"../../Actions/Common\";\r\n// import { openErrDialog } from \"../../Actions/Error\";\r\n// import { getToiletInfoFailure, getToiletInfoSuccess } from \"../../Actions/UsageStats\";\r\n// import { USAGE_STATS_ACTIONS } from \"../../Resourses/ActionTypes\";\r\n// import { APP_CONFIGS, URLS } from \"../../Resourses/Configs\";\r\n// import { ERR_MESSAGES, ERR_TITLES } from \"../../Resourses/Messages\";\r\n\r\n// POST\r\nconst postByAxios = async (url: string, body: object, headers: object = {}) => {\r\n  return axios\r\n    .post(url, body, headers)\r\n    .then((res: any) => {\r\n      return { res };\r\n    })\r\n    .catch((err: any) => {\r\n      return { err };\r\n    });\r\n};\r\n\r\n// const reqApi = async () => {\r\n//   const url = \"\";\r\n//   const body = {};\r\n//   const { res, err } = await postByAxios(url, body);\r\n//   if (res && res.status === 200) {\r\n//     // 正常処理\r\n//   } else {\r\n//     // 異常処理\r\n//   }\r\n// };\r\n\r\nfunction* getToiletInfo(action: any) {\r\n  //   //プログレスリングの開始\r\n  //   yield put(startProcess());\r\n  //   //APIコール\r\n  //   const { res, err } = yield call(() => postToiletInfoAsync(URLS.GET_TOILET_STATS, action.payload.facil));\r\n  //   // 400や500エラーの時は、本来はAPI GatewayでstatusCodeを合わせて送るが、今回は200のボディにそのままLambdaでのエラーが入っている\r\n  //   if (res && res.data.statusCode >= 200 && res.data.statusCode < 300) {\r\n  //     // Lambdaで処理が行われて、結果が正常系の場合\r\n  //     // 200系の場合\r\n  //     //プログレスリングの終了、リクエスト成功イベントのput\r\n  //     yield put(endProcess());\r\n  //     yield put(getToiletInfoSuccess(res.data));\r\n  //   } else {\r\n  //     // どこかで異常が起きた場合\r\n  //     //プログレスリングの終了、リクエスト失敗イベントのput、エラーダイアログの開始\r\n  //     yield put(endProcess());\r\n  //     yield put(getToiletInfoFailure(err));\r\n  //     yield put(openErrDialog(ERR_MESSAGES.TOILET_STATS_FETCH_ERR, ERR_TITLES.TOILET_STATS_FETCH_ERR));\r\n  //   }\r\n}\r\n\r\nexport const apiReqs = [takeLatest(\"GET_TOILET_INFO\", getToiletInfo)];\r\n","import { all } from 'redux-saga/effects';\r\nimport { apiReqs } from './apis';\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        ...apiReqs\r\n    ])\r\n}\r\n","import * as redux from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport common from \"./reducers/common\";\r\n// import { APP_CONFIGS } from \"./Resourses/Configs\";\r\nimport rootSaga from \"./sagas/root\";\r\n\r\nconst rootReducer = redux.combineReducers({ common });\r\n\r\n// いろんな型のミドルウェアを登録するためここはany\r\nconst middlewares: any = [];\r\n\r\n//開発時のみredux-loggerを適用\r\n// if (APP_CONFIGS.IS_DEVELOP) {\r\nif (true) {\r\n  //loggerオブジェクトの生成\r\n  const logger = createLogger({\r\n    diff: true,\r\n    collapsed: true\r\n  });\r\n  //loggerオブジェクトをmiddlewaresへ追加\r\n  middlewares.push(logger);\r\n}\r\n\r\n//storeを生成する関数\r\nexport const configureStore = () => {\r\n  //sagaMiddlewareオブジェクトの生成とmiddlewaresへの追加\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  middlewares.push(sagaMiddleware);\r\n  //storeの設定\r\n  const store = redux.createStore(rootReducer, redux.applyMiddleware(...middlewares));\r\n  //sagaMiddlewareの開始\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { configureStore } from \"./store\";\n\nconst basename = \"react-faq-tool\";\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Router basename={basename}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}